{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["MovieGenre","_ref","genre","react_default","a","createElement","className","MoviePoster","_ref2","poster","title","src","alt","Movie","_this$props","this","props","genres","synopsis","map","index","key","lib_default","text","maxLine","ellipsis","trimRight","basedOn","Component","App","state","_getMovie","_callee","movies","regenerator_default","wrap","_context","prev","next","_this","_callApi","sent","setState","stop","fetch","then","response","json","data","catch","err","console","log","_renderMovie","src_Movie_0","id","title_english","medium_cover_image","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"gUAwCA,SAASA,EAATC,GAA6B,IAARC,EAAQD,EAARC,MACnB,OACEC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gBAAgBJ,GAQpC,SAASK,EAATC,GAAsC,IAAhBC,EAAgBD,EAAhBC,OAAQC,EAAQF,EAARE,MAC5B,OACEP,EAAAC,EAAAC,cAAA,OAAKM,IAAKF,EAAQG,IAAKF,EAAOA,MAAOA,EAAOJ,UAAU,kBAS3CO,uLAhDJ,IAAAC,EACmCC,KAAKC,MAAxCN,EADAI,EACAJ,MAAOD,EADPK,EACOL,OAAQQ,EADfH,EACeG,OAAQC,EADvBJ,EACuBI,SAC9B,OACEf,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAACE,EAAD,CAAaE,OAAQA,EAAQC,MAAOA,KAExCP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACXH,EAAAC,EAAAC,cAAA,UAAKK,GACLP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACVW,EAAOE,IAAI,SAACjB,EAAOkB,GAAR,OAAkBjB,EAAAC,EAAAC,cAACL,EAAD,CAAYE,MAAOA,EAAOmB,IAAKD,OAEjEjB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACfH,EAAAC,EAAAC,cAACiB,EAAAlB,EAAD,CACImB,KAAML,EACNM,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,sBA1BJC,aCmCLC,oNAnCbC,MAAQ,KAMRC,+BAAY,SAAAC,IAAA,IAAAC,EAAA,OAAAC,EAAA9B,EAAA+B,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACWC,EAAKC,WADhB,OACJP,EADIG,EAAAK,KAEVF,EAAKG,SAAS,CACZT,WAHQ,wBAAAG,EAAAO,SAAAX,EAAAjB,WAOZyB,SAAW,WACT,OAAOI,MAAM,iEACZC,KAAK,SAACC,GAAD,OAAcA,EAASC,SAC5BF,KAAK,SAACE,GAAD,OAAUA,EAAKC,KAAKf,SACzBgB,MAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAG5BG,aAAe,WACb,OAAOd,EAAKT,MAAMG,OAAOd,IAAI,SAAC6B,GAAD,OAC7B7C,EAAAC,EAAAC,cAACiD,EAAD,CAAOjC,IAAK2B,EAAKO,GAAI7C,MAAOsC,EAAKQ,cAAe/C,OAAQuC,EAAKS,mBAAoBxC,OAAQ+B,EAAK/B,OAAQC,SAAU8B,EAAK9B,iGAnBrHH,KAAKgB,6CAsBE,IACAE,EAAUlB,KAAKe,MAAfG,OACP,OACE9B,EAAAC,EAAAC,cAAA,OAAKC,UAAW2B,EAAS,MAAQ,gBAC9BA,EAASlB,KAAKsC,eAAiB,qBA9BtBzB,cCClB8B,IAASC,OAAOxD,EAAAC,EAAAC,cAACuD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.073dc61a.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport propTypes from \"prop-types\";\nimport LinesEllipsis from \"react-lines-ellipsis\";\nimport \"./Movie.css\";\n\nclass Movie extends Component {\n  static propTypes = {\n    title: propTypes.string.isRequired,\n    poster: propTypes.string.isRequired,\n    genres: propTypes.array.isRequired,\n    synopsis: propTypes.string.isRequired\n  }\n\n  render() {\n    const {title, poster, genres, synopsis} = this.props;\n    return (\n      <div className=\"Movie\">\n        <div className=\"Movie__Column\">\n            <MoviePoster poster={poster} title={title} />\n        </div>   \n        <div className=\"Movie__Column\">\n            <h1>{title}</h1>\n            <div className=\"Movie__Genres\">\n                {genres.map((genre, index) => <MovieGenre genre={genre} key={index} />)}\n            </div>\n            <div className=\"Movie__Synopsis\">\n            <LinesEllipsis\n                text={synopsis}\n                maxLine='3'\n                ellipsis='...'\n                trimRight\n                basedOn='letters'\n                />   \n            </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction MovieGenre({genre}) {\n  return (\n    <span className=\"Movie__Genre\">{genre}</span>\n  )\n}\n\nMovieGenre.propTypes = {\n  genre: propTypes.string.isRequired\n}\n\nfunction MoviePoster({poster, title}) {\n  return (\n    <img src={poster} alt={title} title={title} className=\"Movie__Poster\"/>\n  )\n}\n\nMoviePoster.propTypes = {\n  title: propTypes.string.isRequired,\n  poster: propTypes.string.isRequired\n}\n\nexport default Movie;\n","import React, { Component } from \"react\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends Component {\n  state = {}\n\n  componentDidMount() {\n    this._getMovie();\n  }\n\n  _getMovie = async () => {\n    const movies = await this._callApi();\n    this.setState({\n      movies\n    })\n  }\n\n  _callApi = () => {\n    return fetch(\"https://yts.am/api/v2/list_movies.json?sort_by=download_count\")\n    .then((response) => response.json())\n    .then((json) => json.data.movies)\n    .catch(err => console.log(err))\n  }\n\n  _renderMovie = () => {\n    return this.state.movies.map((data) => \n    <Movie key={data.id} title={data.title_english} poster={data.medium_cover_image} genres={data.genres} synopsis={data.synopsis}></Movie>);\n  }\n\n  render() {\n    const {movies} = this.state;\n    return (\n      <div className={movies ? \"App\" : \"App--loading\"}>\n        {movies ? this._renderMovie() : \"Loading...\"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}